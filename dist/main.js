(()=>{"use strict";class e{constructor(e){this.title=e}}let t=[];new e("New Project");class n{constructor(e,t,n,l,s){this.title=e,this.dueDate=t,this.projectTitle=n,this.priority=l,this.isComplete=s}}let l=[],s=[];const o=e=>{localStorage.setItem("taskList",JSON.stringify(e))},a=e=>{localStorage.setItem("projectList",JSON.stringify(e))},c=()=>{let e=document.querySelector(".taskList"),t=0;l.filter((e=>e.projectTitle.includes(s))).forEach((n=>{let s=document.createElement("div");s.dataset.index=t,s.classList.add("task","lowPriority"),e.append(s);let a=document.createElement("div");a.classList.add("taskTitleContainer");let r=document.createElement("span");r.classList.add("material-symbols-outlined","taskCheck"),r.textContent="radio_button_unchecked";let d=document.createElement("p");d.classList.add("taskTitle"),d.textContent=n.title,a.append(r,d);let u=document.createElement("p");u.classList.add("taskDate"),u.textContent=n.dueDate;let m=document.createElement("span");m.classList.add("material-symbols-outlined","deleteTaskBtn"),m.textContent="delete",m.dataset.index=t,t++;let p=document.createElement("span");p.classList.add("material-symbols-outlined","taskEdit"),p.textContent="edit_square","high"==n.priority&&(s.classList.remove("lowPriority"),s.classList.add("highPriority")),1==n.isComplete&&(s.classList.add("completeTask"),r.classList.add("taskCheckTrue"),r.textContent="check_circle"),s.append(a,u,m),m.addEventListener("click",(function(e){e.target.classList.contains("deleteTaskBtn")&&(e.stopPropagation(),console.log(m.dataset.index),l.splice(m.dataset.index,1),e.target.closest(".task").remove(),i(),c(),o(l))})),r.addEventListener("click",(function(e){e.target.classList.contains("taskCheck")&&(0==l[m.dataset.index].isComplete?(e.stopPropagation(),e.target.classList.add("taskCheckTrue"),l[m.dataset.index].isComplete=!0,i(),c(),o(l)):(e.stopPropagation(),e.target.classList.remove("taskCheckTrue"),e.target.textContent="radio_button_unchecked",l[m.dataset.index].isComplete=!1,i(),c(),o(l)))}))}))},i=()=>{document.querySelector(".taskList").innerHTML=""},r=()=>{let e=document.querySelector(".projectList"),n=0;t.forEach((s=>{let u=document.createElement("div");u.classList.add("project"),e.append(u),u.dataset.index=n,n++;let m=document.createElement("p");m.classList.add("taskTitle"),m.textContent=s.title;let p=document.createElement("span");p.classList.add("material-symbols-outlined","deleteProjectBtn"),p.textContent="delete",u.append(m,p),p.addEventListener("click",(function(e){const n=e.target.previousElementSibling.textContent.toString();if(e.target.classList.contains("deleteProjectBtn")){function s(e,t){for(let n=t.length-1;n>=0;n--)t[n].projectTitle===e&&t.splice(n,1)}e.stopPropagation(),console.log(u.dataset.index),t.splice(u.dataset.index,1),console.log(n),e.target.closest(".project").remove(),s(n,l),d(),r(),i(),c(),a(t),o(l),console.log(t),console.log(e.target.previousElementSibling.textContent.toString())}}))}))},d=()=>{document.querySelector(".projectList").innerHTML=""};document.addEventListener("click",(function(e){if(e.target.classList.contains("project")){let t=e.target.querySelector(".taskTitle").textContent;s=t,i(),c(l)}})),console.log(t),t=null===localStorage.getItem("projectList")?[]:JSON.parse(localStorage.getItem("projectList")),l=null===localStorage.getItem("taskList")?[]:JSON.parse(localStorage.getItem("taskList")),s=null===localStorage.getItem("currentProject")?"":JSON.parse(localStorage.getItem("currentProject")),c(),r(),(()=>{let e=document.querySelector(".newTaskBtn"),a=document.querySelector(".newTaskContainer");e.addEventListener("click",(function(){0===t.length?alert("Please create a project first!"):null===s?alert("Please create or select an existing project!"):(a.style.display="flex",e.style.display="none")}));let r=document.querySelector(".confirmTaskBtn"),d=document.querySelector(".cancelTaskBtn");r.addEventListener("click",(function(){let t=document.querySelector("#taskName").value,r=document.querySelector("#taskDate").value,d=document.querySelector("#prioritySelector").value,u=new n(t,r,s,d,!1);console.log(l),l.push(u),console.log(localStorage),i(),c(l),document.querySelectorAll("#taskName, #taskDate, #prioritySelector").forEach((e=>{e.value=""})),a.style.display="none",e.style.display="inline",o(l)})),d.addEventListener("click",(function(){a.style.display="none",e.style.display="inline"}))})(),(()=>{let n=document.querySelector(".newProjectBtn"),l=document.querySelector(".newProjectContainer");n.addEventListener("click",(function(){l.style.display="flex",n.style.display="none"}));let o=document.querySelector(".confirmProjectBtn"),u=document.querySelector(".cancelProjectBtn");o.addEventListener("click",(function(){let o=document.querySelector("#projectName").value,u=new e(o);var m;t.push(u),s=o,d(),r(),i(),c(),document.querySelectorAll("#projectName").forEach((e=>{e.value=""})),l.style.display="none",n.style.display="inline",a(t),m=s,localStorage.setItem("currentProject",JSON.stringify(m))})),u.addEventListener("click",(function(){l.style.display="none",n.style.display="inline"}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SCxNQUFRLEVBQUUsSUFHcEJNLEVBQW9CVixNQUFNQyxRQUFVLE9BQ3BDUSxFQUFjVCxNQUFNQyxRQUFVLFNBRTlCeEQsRUFBMEJiLEdEakpOeUQsRUNrSkRuRCxFRGpKdkJHLGFBQWFDLFFBQVEsaUJBQWtCQyxLQUFLQyxVQUFVNkMsR0NrSnRELElBRUF1QixFQUFpQnpDLGlCQUFpQixTQUFTLFdBQ3ZDdUMsRUFBb0JWLE1BQU1DLFFBQVUsT0FDcENRLEVBQWNULE1BQU1DLFFBQVUsUUFDbEMsR0FBRSxFQ25MTmMsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9wcm9qZWN0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy90YXNrLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdG9yYWdlLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9ET00uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBQcm9qZWN0IHtcclxuICAgIGNvbnN0cnVjdG9yKHRpdGxlKSB7XHJcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gICAgfVxyXG59XHJcblxyXG5sZXQgcHJvamVjdExpc3QgPSBbXTtcclxubGV0IGRlZmF1bHRQcm9qZWN0ID0gbmV3IFByb2plY3QoJ05ldyBQcm9qZWN0Jyk7XHJcblxyXG5leHBvcnQgeyBwcm9qZWN0TGlzdCwgZGVmYXVsdFByb2plY3QgfSIsImltcG9ydCB7IFByb2plY3QgfSBmcm9tIFwiLi9wcm9qZWN0XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVGFzayB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZSwgZHVlRGF0ZSwgcHJvamVjdFRpdGxlLCBwcmlvcml0eSwgaXNDb21wbGV0ZSkge1xyXG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcclxuICAgICAgICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xyXG4gICAgICAgIHRoaXMucHJvamVjdFRpdGxlID0gcHJvamVjdFRpdGxlO1xyXG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSBwcmlvcml0eTtcclxuICAgICAgICB0aGlzLmlzQ29tcGxldGUgPSBpc0NvbXBsZXRlO1xyXG4gICAgfVxyXG59XHJcblxyXG5sZXQgdGFza0xpc3QgPSBbXTtcclxubGV0IGN1cnJlbnRQcm9qZWN0ID0gW107XHJcblxyXG5mdW5jdGlvbiBmaWx0ZXJCeVByb2plY3QoKSB7XHJcbiAgICBsZXQgZmlsdGVyUHJvamVjdCA9IHRhc2tMaXN0LmZpbHRlcih2YWwgPT4gdmFsLnByb2plY3RUaXRsZS5pbmNsdWRlcyhjdXJyZW50UHJvamVjdCkpO1xyXG4gICAgcmV0dXJuIGZpbHRlclByb2plY3Q7XHJcbn1cclxuXHJcbmV4cG9ydCB7IGN1cnJlbnRQcm9qZWN0LCBmaWx0ZXJCeVByb2plY3QsIHRhc2tMaXN0IH0iLCJpbXBvcnQgeyBjdXJyZW50UHJvamVjdCwgdGFza0xpc3QgfSBmcm9tIFwiLi90YXNrXCI7XHJcbmltcG9ydCB7IHByb2plY3RMaXN0IH0gZnJvbSBcIi4vcHJvamVjdFwiO1xyXG5cclxuLy8gVGFza3MgbG9jYWwgc3RvcmFnZVxyXG5cclxuXHJcbmNvbnN0IHNhdmVUYXNrVG9Mb2NhbFN0b3JhZ2UgPSAodGFzaykgPT4ge1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rhc2tMaXN0JywgSlNPTi5zdHJpbmdpZnkodGFzaykpXHJcbn1cclxuXHJcbmNvbnN0IGdldFRhc2tzID0gKCkgPT4ge1xyXG4gICAgaWYobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rhc2tMaXN0JykgPT09IG51bGwpIHtcclxuICAgICAgICB0YXNrTGlzdCA9IFtdO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB0YXNrTGlzdCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rhc2tMaXN0JykpO1xyXG4gICAgfVxyXG59XHJcblxyXG5jb25zdCBjbGVhckxvY2FsU3RvcmFnZSA9ICh0YXNrKSA9PiB7XHJcbiAgICBpZihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0YXNrKSA9PT0gbnVsbCkge1xyXG4gICAgICAgIHRhc2tMaXN0ID0gW107XHJcbiAgICB9IGVsc2UgeyAgXHJcbiAgICAgICAgdGFza0xpc3QgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0YXNrTGlzdCcpKVxyXG4gICAgfVxyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rhc2tMaXN0JywgSlNPTi5zdHJpbmdpZnkodGFza0xpc3QpKVxyXG59XHJcblxyXG4vL1Byb2plY3QgbG9jYWwgc3RvYXJnZVxyXG5cclxuY29uc3Qgc2F2ZVByb2plY3RUb0xvY2FsU3RvcmFnZSA9IChwcm9qZWN0KSA9PiB7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncHJvamVjdExpc3QnLCBKU09OLnN0cmluZ2lmeShwcm9qZWN0KSlcclxufVxyXG5cclxuY29uc3QgZ2V0UHJvamVjdHMgPSAoKSA9PiB7XHJcbiAgICBpZihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncHJvamVjdExpc3QnKSA9PT0gbnVsbCkge1xyXG4gICAgICAgIHByb2plY3RMaXN0ID0gW107XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHByb2plY3RMaXN0ID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncHJvamVjdExpc3QnKSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNvbnN0IHNhdmVDdXJyZW50UHJvamVjdCA9IChwcm9qZWN0TmFtZSkgPT4ge1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2N1cnJlbnRQcm9qZWN0JywgSlNPTi5zdHJpbmdpZnkocHJvamVjdE5hbWUpKVxyXG59XHJcblxyXG5jb25zdCBnZXRDdXJyZW50UHJvamVjdCA9ICgpID0+IHtcclxuICAgIGlmKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50UHJvamVjdCcpID09PSBudWxsKSB7XHJcbiAgICAgICAgY3VycmVudFByb2plY3QgPSAnJztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY3VycmVudFByb2plY3QgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50UHJvamVjdCcpKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHsgc2F2ZVRhc2tUb0xvY2FsU3RvcmFnZSwgZ2V0VGFza3MsIGNsZWFyTG9jYWxTdG9yYWdlLCBzYXZlUHJvamVjdFRvTG9jYWxTdG9yYWdlLCBnZXRQcm9qZWN0cywgc2F2ZUN1cnJlbnRQcm9qZWN0LCBnZXRDdXJyZW50UHJvamVjdCB9IiwiaW1wb3J0IHsgUHJvamVjdCwgcHJvamVjdExpc3QgfSBmcm9tIFwiLi9wcm9qZWN0XCI7XHJcbmltcG9ydCB7IHRhc2tMaXN0LCBmaWx0ZXJCeVByb2plY3QsIFRhc2ssIGN1cnJlbnRQcm9qZWN0IH0gZnJvbSBcIi4vdGFza1wiO1xyXG5pbXBvcnQgeyBzYXZlVGFza1RvTG9jYWxTdG9yYWdlLCBzYXZlQ3VycmVudFByb2plY3QsIHNhdmVQcm9qZWN0VG9Mb2NhbFN0b3JhZ2UgfSBmcm9tIFwiLi9zdG9yYWdlXCI7XHJcblxyXG5cclxuY29uc3QgZ2VuZXJhdGVUYXNrID0gKCkgPT4ge1xyXG5cclxuICAgIGxldCBuZXdUYXNrQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5ld1Rhc2tCdG4nKTtcclxuICAgIGxldCBuZXdUYXNrQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5ld1Rhc2tDb250YWluZXInKTtcclxuXHJcblxyXG4gICAgbmV3VGFza0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG5cclxuICAgICAgICBpZiAocHJvamVjdExpc3QubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIGFsZXJ0KCdQbGVhc2UgY3JlYXRlIGEgcHJvamVjdCBmaXJzdCEnKVxyXG4gICAgICAgIH0gZWxzZSBpZiAoY3VycmVudFByb2plY3QgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgYWxlcnQoJ1BsZWFzZSBjcmVhdGUgb3Igc2VsZWN0IGFuIGV4aXN0aW5nIHByb2plY3QhJylcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBuZXdUYXNrQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XHJcbiAgICAgICAgICAgIG5ld1Rhc2tCdG4uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICB9XHJcbiAgICB9KTsgXHJcbiAgICBcclxuXHJcbiAgICBsZXQgY29uZmlybVRhc2tCdG4gPSAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbmZpcm1UYXNrQnRuJyk7XHJcbiAgICBsZXQgY2FuY2VsVGFza0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYW5jZWxUYXNrQnRuJyk7XHJcblxyXG4gICAgY29uZmlybVRhc2tCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBsZXQgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFza05hbWUnKS52YWx1ZTtcclxuICAgICAgICBsZXQgZHVlRGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YXNrRGF0ZScpLnZhbHVlO1xyXG4gICAgICAgIGxldCBwcmlvcml0eSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcmlvcml0eVNlbGVjdG9yJykudmFsdWU7XHJcbiAgICAgICAgbGV0IHByb2plY3RUaXRsZSA9IGN1cnJlbnRQcm9qZWN0O1xyXG4gICAgICAgIGxldCBpc0NvbXBsZXRlID0gZmFsc2U7IFxyXG5cclxuICAgICAgICBsZXQgYWRkVGFza3MgPSBuZXcgVGFzayh0aXRsZSwgZHVlRGF0ZSwgcHJvamVjdFRpdGxlLCBwcmlvcml0eSwgaXNDb21wbGV0ZSk7XHJcbiAgICAgICAgY29uc29sZS5sb2codGFza0xpc3QpO1xyXG4gICAgICAgIHRhc2tMaXN0LnB1c2goYWRkVGFza3MpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGxvY2FsU3RvcmFnZSk7XHJcbiAgICAgICAgcmVzZXRUYXNrTGlzdCgpO1xyXG4gICAgICAgIGRpc3BsYXlUYXNrcyh0YXNrTGlzdCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgaW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI3Rhc2tOYW1lLCAjdGFza0RhdGUsICNwcmlvcml0eVNlbGVjdG9yJyk7XHJcbiAgICAgICAgaW5wdXRzLmZvckVhY2goaW5wdXQgPT4ge1xyXG4gICAgICAgICAgICBpbnB1dC52YWx1ZSA9ICcnXHJcbiAgICAgICAgfSlcclxuICBcclxuICAgICAgICBuZXdUYXNrQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7IFxyXG4gICAgICAgIG5ld1Rhc2tCdG4uc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUnO1xyXG4gICAgICAgIHNhdmVUYXNrVG9Mb2NhbFN0b3JhZ2UodGFza0xpc3QpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY2FuY2VsVGFza0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIG5ld1Rhc2tDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICBuZXdUYXNrQnRuLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lJztcclxuICAgIH0pO1xyXG4gICAgXHJcblxyXG59XHJcblxyXG5cclxuY29uc3QgZGlzcGxheVRhc2tzID0gKCkgPT4ge1xyXG4gICAgbGV0IHRhc2tMaXN0Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhc2tMaXN0Jyk7XHJcblxyXG4gICAgbGV0IHRhc2tJbmRleCA9IDA7XHJcblxyXG4gICAgZmlsdGVyQnlQcm9qZWN0KCkuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICBsZXQgdGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIHRhc2suZGF0YXNldC5pbmRleCA9IHRhc2tJbmRleDtcclxuICAgICAgICB0YXNrLmNsYXNzTGlzdC5hZGQoJ3Rhc2snLCAnbG93UHJpb3JpdHknKTtcclxuICAgICAgICB0YXNrTGlzdENvbnRhaW5lci5hcHBlbmQodGFzayk7XHJcblxyXG4gICAgICAgIGxldCB0YXNrVGl0bGVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICB0YXNrVGl0bGVDb250YWluZXIuY2xhc3NMaXN0LmFkZCgndGFza1RpdGxlQ29udGFpbmVyJyk7XHJcblxyXG4gICAgICAgIGxldCB0YXNrQ2hlY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICAgICAgdGFza0NoZWNrLmNsYXNzTGlzdC5hZGQoJ21hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQnLCAndGFza0NoZWNrJyk7XHJcbiAgICAgICAgdGFza0NoZWNrLnRleHRDb250ZW50ID0gJ3JhZGlvX2J1dHRvbl91bmNoZWNrZWQnO1xyXG5cclxuICAgICAgICBsZXQgdGFza1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgICAgIHRhc2tUaXRsZS5jbGFzc0xpc3QuYWRkKCd0YXNrVGl0bGUnKTtcclxuICAgICAgICB0YXNrVGl0bGUudGV4dENvbnRlbnQgPSBlbGVtZW50LnRpdGxlO1xyXG5cclxuICAgICAgICB0YXNrVGl0bGVDb250YWluZXIuYXBwZW5kKHRhc2tDaGVjaywgdGFza1RpdGxlKVxyXG5cclxuICAgICAgICBsZXQgdGFza0RhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICAgICAgdGFza0RhdGUuY2xhc3NMaXN0LmFkZCgndGFza0RhdGUnKTtcclxuICAgICAgICB0YXNrRGF0ZS50ZXh0Q29udGVudCA9IGVsZW1lbnQuZHVlRGF0ZTtcclxuXHJcbiAgICAgICAgbGV0IHRhc2tEZWxldGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICAgICAgdGFza0RlbGV0ZS5jbGFzc0xpc3QuYWRkKCdtYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkJywgJ2RlbGV0ZVRhc2tCdG4nKTtcclxuICAgICAgICB0YXNrRGVsZXRlLnRleHRDb250ZW50ID0gJ2RlbGV0ZSc7XHJcbiAgICAgICAgdGFza0RlbGV0ZS5kYXRhc2V0LmluZGV4ID0gdGFza0luZGV4O1xyXG4gICAgICAgIHRhc2tJbmRleCsrO1xyXG5cclxuXHJcbiAgICAgICAgbGV0IHRhc2tFZGl0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgICAgIHRhc2tFZGl0LmNsYXNzTGlzdC5hZGQoJ21hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQnLCAndGFza0VkaXQnKTtcclxuICAgICAgICB0YXNrRWRpdC50ZXh0Q29udGVudCA9ICdlZGl0X3NxdWFyZSc7XHJcblxyXG4gICAgICAgIGlmKGVsZW1lbnQucHJpb3JpdHkgPT0gJ2hpZ2gnKSB7XHJcbiAgICAgICAgICAgIHRhc2suY2xhc3NMaXN0LnJlbW92ZSgnbG93UHJpb3JpdHknKTtcclxuICAgICAgICAgICAgdGFzay5jbGFzc0xpc3QuYWRkKCdoaWdoUHJpb3JpdHknKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKGVsZW1lbnQuaXNDb21wbGV0ZSA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIHRhc2suY2xhc3NMaXN0LmFkZCgnY29tcGxldGVUYXNrJyk7XHJcbiAgICAgICAgICAgIHRhc2tDaGVjay5jbGFzc0xpc3QuYWRkKCd0YXNrQ2hlY2tUcnVlJyk7XHJcbiAgICAgICAgICAgIHRhc2tDaGVjay50ZXh0Q29udGVudCA9ICdjaGVja19jaXJjbGUnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGFzay5hcHBlbmQodGFza1RpdGxlQ29udGFpbmVyLCB0YXNrRGF0ZSwgdGFza0RlbGV0ZSk7XHJcblxyXG4gICAgICAgIHRhc2tEZWxldGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuXHJcbiAgICAgICAgICAgIGlmIChldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkZWxldGVUYXNrQnRuJykpIHtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codGFza0RlbGV0ZS5kYXRhc2V0LmluZGV4KTtcclxuICAgICAgICAgICAgICAgIHRhc2tMaXN0LnNwbGljZSh0YXNrRGVsZXRlLmRhdGFzZXQuaW5kZXgsIDEpO1xyXG4gICAgICAgICAgICAgICAgZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJy50YXNrJykucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICByZXNldFRhc2tMaXN0KCk7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5VGFza3MoKTtcclxuICAgICAgICAgICAgICAgIHNhdmVUYXNrVG9Mb2NhbFN0b3JhZ2UodGFza0xpc3QpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRhc2tDaGVjay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICBpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygndGFza0NoZWNrJykpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0YXNrTGlzdFt0YXNrRGVsZXRlLmRhdGFzZXQuaW5kZXhdLmlzQ29tcGxldGUgPT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ3Rhc2tDaGVja1RydWUnKTtcclxuICAgICAgICAgICAgICAgIHRhc2tMaXN0W3Rhc2tEZWxldGUuZGF0YXNldC5pbmRleF0uaXNDb21wbGV0ZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICByZXNldFRhc2tMaXN0KCk7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5VGFza3MoKTtcclxuICAgICAgICAgICAgICAgIHNhdmVUYXNrVG9Mb2NhbFN0b3JhZ2UodGFza0xpc3QpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgICAgICAgICBldmVudC50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgndGFza0NoZWNrVHJ1ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnRhcmdldC50ZXh0Q29udGVudCA9ICdyYWRpb19idXR0b25fdW5jaGVja2VkJztcclxuICAgICAgICAgICAgICAgICAgICB0YXNrTGlzdFt0YXNrRGVsZXRlLmRhdGFzZXQuaW5kZXhdLmlzQ29tcGxldGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICByZXNldFRhc2tMaXN0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheVRhc2tzKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2F2ZVRhc2tUb0xvY2FsU3RvcmFnZSh0YXNrTGlzdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG5cclxuICAgIH0pOyBcclxufVxyXG5cclxuY29uc3QgcmVzZXRUYXNrTGlzdCA9ICgpID0+IHtcclxuICAgIGxldCB0YXNrTGlzdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrTGlzdCcpO1xyXG4gICAgdGFza0xpc3RDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XHJcbn1cclxuXHJcbmNvbnN0IGdlbmVyYXRlUHJvamVjdCA9ICgpID0+IHtcclxuICAgIGxldCBuZXdQcm9qZWN0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5ld1Byb2plY3RCdG4nKTtcclxuICAgIGxldCBuZXdQcm9qZWN0Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5ld1Byb2plY3RDb250YWluZXInKTtcclxuICAgIFxyXG4gICAgbmV3UHJvamVjdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIG5ld1Byb2plY3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICdmbGV4JztcclxuICAgICAgICBuZXdQcm9qZWN0QnRuLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICB9KTtcclxuXHJcbiAgICBsZXQgY29uZmlybVByb2plY3RCdG4gPSAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbmZpcm1Qcm9qZWN0QnRuJyk7XHJcbiAgICBsZXQgY2FuY2VsUHJvamVjdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYW5jZWxQcm9qZWN0QnRuJyk7XHJcblxyXG4gICAgY29uZmlybVByb2plY3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBsZXQgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvamVjdE5hbWUnKS52YWx1ZTtcclxuXHJcbiAgICAgICAgbGV0IGFkZFByb2plY3RzID0gbmV3IFByb2plY3QodGl0bGUpO1xyXG4gICAgICAgIHByb2plY3RMaXN0LnB1c2goYWRkUHJvamVjdHMpO1xyXG4gICAgICAgIGN1cnJlbnRQcm9qZWN0ID0gdGl0bGU7XHJcblxyXG4gICAgICAgIHJlc2V0UHJvamVjdExpc3QoKTtcclxuICAgICAgICBkaXNwbGF5UHJvamVjdHMoKTtcclxuICAgICAgICByZXNldFRhc2tMaXN0KCk7XHJcbiAgICAgICAgZGlzcGxheVRhc2tzKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgaW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI3Byb2plY3ROYW1lJyk7XHJcbiAgICAgICAgaW5wdXRzLmZvckVhY2goaW5wdXQgPT4ge1xyXG4gICAgICAgICAgICBpbnB1dC52YWx1ZSA9ICcnO1xyXG4gICAgICAgIH0pXHJcbiAgXHJcbiAgICAgICAgbmV3UHJvamVjdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOyBcclxuICAgICAgICBuZXdQcm9qZWN0QnRuLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lJztcclxuXHJcbiAgICAgICAgc2F2ZVByb2plY3RUb0xvY2FsU3RvcmFnZShwcm9qZWN0TGlzdCk7XHJcbiAgICAgICAgc2F2ZUN1cnJlbnRQcm9qZWN0KGN1cnJlbnRQcm9qZWN0KTtcclxuICAgIH0pO1xyXG5cclxuICAgIGNhbmNlbFByb2plY3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBuZXdQcm9qZWN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgbmV3UHJvamVjdEJ0bi5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZSc7XHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcbmNvbnN0IGRpc3BsYXlQcm9qZWN0cyA9ICgpID0+IHtcclxuICAgIGxldCBwcm9qZWN0TGlzdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0TGlzdCcpO1xyXG4gICAgbGV0IHByb2plY3RJbmRleCA9IDA7XHJcblxyXG4gICAgcHJvamVjdExpc3QuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuXHJcbiAgICAgICAgbGV0IHByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBwcm9qZWN0LmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QnKTtcclxuICAgICAgICBwcm9qZWN0TGlzdENvbnRhaW5lci5hcHBlbmQocHJvamVjdCk7XHJcbiAgICAgICAgcHJvamVjdC5kYXRhc2V0LmluZGV4ID0gcHJvamVjdEluZGV4O1xyXG4gICAgICAgIHByb2plY3RJbmRleCsrXHJcblxyXG4gICAgICAgIGxldCBwcm9qZWN0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICAgICAgcHJvamVjdFRpdGxlLmNsYXNzTGlzdC5hZGQoJ3Rhc2tUaXRsZScpO1xyXG4gICAgICAgIHByb2plY3RUaXRsZS50ZXh0Q29udGVudCA9IGVsZW1lbnQudGl0bGU7XHJcblxyXG4gICAgICAgIGxldCBwcm9qZWN0RGVsZXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgICAgIHByb2plY3REZWxldGUuY2xhc3NMaXN0LmFkZCgnbWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCcsICdkZWxldGVQcm9qZWN0QnRuJyk7XHJcbiAgICAgICAgcHJvamVjdERlbGV0ZS50ZXh0Q29udGVudCA9ICdkZWxldGUnO1xyXG5cclxuICAgICAgICBwcm9qZWN0LmFwcGVuZChwcm9qZWN0VGl0bGUsIHByb2plY3REZWxldGUpO1xyXG5cclxuICAgICAgICBwcm9qZWN0RGVsZXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHByb2plY3ROYW1lVGFyZ2V0ID0gZXZlbnQudGFyZ2V0LnByZXZpb3VzRWxlbWVudFNpYmxpbmcudGV4dENvbnRlbnQudG9TdHJpbmcoKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkZWxldGVQcm9qZWN0QnRuJykpIHtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocHJvamVjdC5kYXRhc2V0LmluZGV4KTtcclxuICAgICAgICAgICAgICAgIHByb2plY3RMaXN0LnNwbGljZShwcm9qZWN0LmRhdGFzZXQuaW5kZXgsIDEpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocHJvamVjdE5hbWVUYXJnZXQpO1xyXG5cclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHJlbW92ZVRhc2tCeVByb2plY3ROYW1lIChwcm9qZWN0TmFtZSwgdGFza3Mpe1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSB0YXNrcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFza3NbaV0ucHJvamVjdFRpdGxlID09PSBwcm9qZWN0TmFtZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFza3Muc3BsaWNlKGksIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJy5wcm9qZWN0JykucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICByZW1vdmVUYXNrQnlQcm9qZWN0TmFtZShwcm9qZWN0TmFtZVRhcmdldCwgdGFza0xpc3QpO1xyXG4gICAgICAgICAgICAgICAgcmVzZXRQcm9qZWN0TGlzdCgpO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheVByb2plY3RzKCk7XHJcbiAgICAgICAgICAgICAgICByZXNldFRhc2tMaXN0KCk7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5VGFza3MoKTtcclxuICAgICAgICAgICAgICAgIHNhdmVQcm9qZWN0VG9Mb2NhbFN0b3JhZ2UocHJvamVjdExpc3QpO1xyXG4gICAgICAgICAgICAgICAgc2F2ZVRhc2tUb0xvY2FsU3RvcmFnZSh0YXNrTGlzdCk7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhwcm9qZWN0TGlzdCk7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudC50YXJnZXQucHJldmlvdXNFbGVtZW50U2libGluZy50ZXh0Q29udGVudC50b1N0cmluZygpKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICB9KTtcclxufVxyXG5cclxuY29uc3QgcmVzZXRQcm9qZWN0TGlzdCA9ICgpID0+IHtcclxuXHJcbiAgICBsZXQgcHJvamVjdExpc3RDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdExpc3QnKTtcclxuICAgIHByb2plY3RMaXN0Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xyXG59XHJcblxyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG4gICAgaWYgKGV2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3Byb2plY3QnKSkge1xyXG5cclxuICAgICAgICBsZXQgcHJvamVjdE5hbWUgPSBldmVudC50YXJnZXQucXVlcnlTZWxlY3RvcignLnRhc2tUaXRsZScpLnRleHRDb250ZW50O1xyXG5cclxuICAgICAgICBjdXJyZW50UHJvamVjdCA9IHByb2plY3ROYW1lO1xyXG4gICAgICAgIHJlc2V0VGFza0xpc3QoKTtcclxuICAgICAgICBkaXNwbGF5VGFza3ModGFza0xpc3QpO1xyXG4gICAgfVxyXG59KVxyXG5cclxuXHJcbmV4cG9ydCB7IGdlbmVyYXRlVGFzaywgZ2VuZXJhdGVQcm9qZWN0LCBkaXNwbGF5VGFza3MsIGRpc3BsYXlQcm9qZWN0cyB9IiwiaW1wb3J0IHsgVGFzayB9IGZyb20gJy4vdGFzaydcclxuaW1wb3J0IHsgZGlzcGxheVRhc2tzLCBkaXNwbGF5UHJvamVjdHMsIGdlbmVyYXRlUHJvamVjdCwgZ2VuZXJhdGVUYXNrIH0gZnJvbSAnLi9ET00nXHJcbmltcG9ydCB7IHByb2plY3RMaXN0LCBkZWZhdWx0UHJvamVjdCB9IGZyb20gJy4vcHJvamVjdCc7XHJcbmltcG9ydCB7IGdldEN1cnJlbnRQcm9qZWN0LCBnZXRQcm9qZWN0cywgZ2V0VGFza3MgfSBmcm9tICcuL3N0b3JhZ2UnO1xyXG5cclxuXHJcbmNvbnNvbGUubG9nKHByb2plY3RMaXN0KTtcclxuXHJcbmdldFByb2plY3RzKCk7XHJcbmdldFRhc2tzKCk7XHJcbmdldEN1cnJlbnRQcm9qZWN0KCk7XHJcbmRpc3BsYXlUYXNrcygpO1xyXG5kaXNwbGF5UHJvamVjdHMoKTtcclxuZ2VuZXJhdGVUYXNrKCk7XHJcbmdlbmVyYXRlUHJvamVjdCgpOyJdLCJuYW1lcyI6WyJQcm9qZWN0IiwiY29uc3RydWN0b3IiLCJ0aXRsZSIsInRoaXMiLCJwcm9qZWN0TGlzdCIsIlRhc2siLCJkdWVEYXRlIiwicHJvamVjdFRpdGxlIiwicHJpb3JpdHkiLCJpc0NvbXBsZXRlIiwiY3VycmVudFByb2plY3QiLCJzYXZlVGFza1RvTG9jYWxTdG9yYWdlIiwidGFzayIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJKU09OIiwic3RyaW5naWZ5Iiwic2F2ZVByb2plY3RUb0xvY2FsU3RvcmFnZSIsInByb2plY3QiLCJkaXNwbGF5VGFza3MiLCJ0YXNrTGlzdENvbnRhaW5lciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInRhc2tJbmRleCIsImZpbHRlciIsInZhbCIsImluY2x1ZGVzIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiZGF0YXNldCIsImluZGV4IiwiY2xhc3NMaXN0IiwiYWRkIiwiYXBwZW5kIiwidGFza1RpdGxlQ29udGFpbmVyIiwidGFza0NoZWNrIiwidGV4dENvbnRlbnQiLCJ0YXNrVGl0bGUiLCJ0YXNrRGF0ZSIsInRhc2tEZWxldGUiLCJ0YXNrRWRpdCIsInJlbW92ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInRhcmdldCIsImNvbnRhaW5zIiwic3RvcFByb3BhZ2F0aW9uIiwiY29uc29sZSIsImxvZyIsImNsb3Nlc3QiLCJyZXNldFRhc2tMaXN0IiwiaW5uZXJIVE1MIiwiZGlzcGxheVByb2plY3RzIiwicHJvamVjdExpc3RDb250YWluZXIiLCJwcm9qZWN0SW5kZXgiLCJwcm9qZWN0RGVsZXRlIiwicHJvamVjdE5hbWVUYXJnZXQiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwidG9TdHJpbmciLCJyZW1vdmVUYXNrQnlQcm9qZWN0TmFtZSIsInByb2plY3ROYW1lIiwidGFza3MiLCJpIiwibGVuZ3RoIiwic3BsaWNlIiwicmVzZXRQcm9qZWN0TGlzdCIsImdldEl0ZW0iLCJwYXJzZSIsIm5ld1Rhc2tCdG4iLCJuZXdUYXNrQ29udGFpbmVyIiwiYWxlcnQiLCJzdHlsZSIsImRpc3BsYXkiLCJjb25maXJtVGFza0J0biIsImNhbmNlbFRhc2tCdG4iLCJ2YWx1ZSIsImFkZFRhc2tzIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0IiwiZ2VuZXJhdGVUYXNrIiwibmV3UHJvamVjdEJ0biIsIm5ld1Byb2plY3RDb250YWluZXIiLCJjb25maXJtUHJvamVjdEJ0biIsImNhbmNlbFByb2plY3RCdG4iLCJhZGRQcm9qZWN0cyIsInB1c2giLCJnZW5lcmF0ZVByb2plY3QiXSwic291cmNlUm9vdCI6IiJ9