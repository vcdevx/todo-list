(()=>{"use strict";class e{constructor(e){this.title=e}}let t=[];new e("New Project");class n{constructor(e,t,n,l){this.title=e,this.dueDate=t,this.projectTitle=n,this.priority=l}}let l=[],c=[];const o=e=>{localStorage.setItem("taskList",JSON.stringify(e))},a=e=>{localStorage.setItem("projectList",JSON.stringify(e))},s=()=>{let e=document.querySelector(".taskList"),t=0;(function(){let e=l.filter((e=>e.projectTitle.includes(c)));return console.log(e),e})().forEach((n=>{let l=document.createElement("div");l.dataset.index=t,console.log(t),t++,l.classList.add("task"),e.append(l);let c=document.createElement("div");c.classList.add("taskTitleContainer");let o=document.createElement("span");o.classList.add("material-symbols-outlined","taskCheck"),o.textContent="radio_button_unchecked";let a=document.createElement("p");a.classList.add("taskTitle"),a.textContent=n.title,c.append(o,a);let s=document.createElement("p");s.classList.add("taskDate"),s.textContent=n.dueDate;let r=document.createElement("span");r.classList.add("material-symbols-outlined","deleteTaskBtn"),r.textContent="delete";let i=document.createElement("span");i.classList.add("material-symbols-outlined","taskEdit"),i.textContent="edit_square","high"==n.priority&&l.classList.add("highPriority"),l.append(c,s,r)}))},r=()=>{document.querySelector(".taskList").innerHTML=""},i=()=>{let e=document.querySelector(".projectList"),n=0;t.forEach((t=>{let l=document.createElement("div");l.classList.add("project"),e.append(l),l.dataset.index=n,console.log(n),n++;let c=document.createElement("p");c.classList.add("taskTitle"),c.textContent=t.title;let o=document.createElement("span");o.classList.add("material-symbols-outlined","deleteProjectBtn"),o.textContent="delete",l.append(c,o)}))};document.addEventListener("click",(function(e){if(e.target.classList.contains("project")){let t=e.target.querySelector(".taskTitle").textContent;c=t,r(),s()}})),document.addEventListener("click",(function(e){let t=document.querySelector(".task");e.target.classList.contains("deleteTaskBtn")&&(e.stopPropagation(),l.splice(t.dataset.index,1),o(l),e.target.closest(".task").remove(),r())})),document.addEventListener("click",(function(e){let n=document.querySelector(".project");e.target.classList.contains("deleteProjectBtn")&&(e.stopPropagation(),t.splice(n.dataset.index,1),a(t),e.target.closest(".project").remove(),r())})),document.addEventListener("click",(function(e){document.querySelector(".taskCheck"),e.target.classList.contains("taskCheck")&&("check_circle"==e.target.textContent?(e.stopPropagation(),e.target.classList.remove("taskCheckTrue"),e.target.textContent="radio_button_unchecked"):(e.stopPropagation(),e.target.classList.add("taskCheckTrue"),e.target.textContent="check_circle"))})),console.log(t),t=null===localStorage.getItem("projectList")?[]:JSON.parse(localStorage.getItem("projectList")),l=null===localStorage.getItem("taskList")?[]:JSON.parse(localStorage.getItem("taskList")),s(),i(),(()=>{let e=document.querySelector(".newTaskBtn"),a=document.querySelector(".newTaskContainer");e.addEventListener("click",(function(){0===t.length?alert("Please create a project first!"):(a.style.display="flex",e.style.display="none")}));let i=document.querySelector(".confirmTaskBtn"),d=document.querySelector(".cancelTaskBtn");i.addEventListener("click",(function(){let t=document.querySelector("#taskName").value,i=document.querySelector("#taskDate").value,d=document.querySelector("#prioritySelector").value,u=new n(t,i,c,d);console.log(l),l.push(u),o(l),console.log(localStorage),r(),s(),document.querySelectorAll("#taskName, #taskDate, #prioritySelector").forEach((e=>{e.value=""})),a.style.display="none",e.style.display="inline"})),d.addEventListener("click",(function(){a.style.display="none",e.style.display="inline"}))})(),(()=>{let n=document.querySelector(".newProjectBtn"),l=document.querySelector(".newProjectContainer");n.addEventListener("click",(function(){l.style.display="flex",n.style.display="none"}));let o=document.querySelector(".confirmProjectBtn"),s=document.querySelector(".cancelProjectBtn");o.addEventListener("click",(function(){let o=document.querySelector("#projectName").value,s=new e(o);t.push(s),c=o,a(t),document.querySelector(".projectList").innerHTML="",i(),document.querySelectorAll("#projectName").forEach((e=>{e.value=""})),l.style.display="none",n.style.display="inline"})),s.addEventListener("click",(function(){l.style.display="none",n.style.display="inline"}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,