(()=>{"use strict";class e{constructor(e){this.title=e}}let t=[],n=new e("New Project");class l{constructor(e,t,n,l){this.title=e,this.dueDate=t,this.projectTitle=n,this.priority=l}}const o=[];let c="New Project";const s=()=>{let e=document.querySelector(".taskList"),t=0;(function(){let e=o.filter((e=>e.projectTitle.includes(c)));return console.log(e),e})().forEach((n=>{let l=document.createElement("div");l.dataset.index=t,console.log(t),t++,l.classList.add("task"),e.append(l);let o=document.createElement("span");o.classList.add("material-symbols-outlined"),o.textContent="radio_button_unchecked";let c=document.createElement("p");c.classList.add("taskTitle"),c.textContent=n.title;let s=document.createElement("p");s.classList.add("taskDate"),s.textContent=n.dueDate;let a=document.createElement("span");a.classList.add("material-symbols-outlined","deleteTaskBtn"),a.textContent="delete";let r=document.createElement("span");r.classList.add("material-symbols-outlined"),r.textContent="keyboard_double_arrow_down","high"==n.priority&&(l.style.backgroundColor="red"),l.append(o,c,s,a,r)}))},a=()=>{document.querySelector(".taskList").innerHTML=""},r=()=>{let e=document.querySelector(".projectList"),n=0;t.forEach((t=>{let l=document.createElement("div");l.classList.add("project"),e.append(l),l.dataset.index=n,console.log(n),n++;let o=document.createElement("p");o.classList.add("taskTitle"),o.textContent=t.title;let c=document.createElement("span");c.classList.add("material-symbols-outlined","deleteProjectBtn"),c.textContent="delete",l.append(o,c)}))};document.addEventListener("click",(function(e){if(e.target.classList.contains("project")){let t=e.target.querySelector(".taskTitle").textContent;c=t,a(),s()}})),document.addEventListener("click",(function(e){let t=document.querySelector(".task");e.target.classList.contains("deleteTaskBtn")&&(e.stopPropagation(),o.splice(t.dataset.index,1),e.target.closest(".task").remove(),a(),console.log(o))})),document.addEventListener("click",(function(e){let n=document.querySelector(".project");e.target.classList.contains("deleteProjectBtn")&&(e.stopPropagation(),t.splice(n.dataset.index,1),e.target.closest(".project").remove(),a(),console.log(t))})),document.addEventListener("click",(e=>{document.querySelector(".checkTask"),e.target.classList.contains(".checkTask")&&e.stopPropagation()})),t.push(n),console.log(t),s(),r(),(()=>{let e=document.querySelector(".newTaskBtn"),n=document.querySelector(".newTaskContainer");e.addEventListener("click",(function(){0===t.length?alert("Please create a project first!"):(n.style.display="flex",e.style.display="none")}));let r=document.querySelector(".confirmTaskBtn"),i=document.querySelector(".cancelTaskBtn");r.addEventListener("click",(function(){let t=document.querySelector("#taskName").value,r=document.querySelector("#taskDate").value,i=document.querySelector("#prioritySelector").value,d=new l(t,r,c,i);console.log(o),o.push(d),a(),s(),document.querySelectorAll("#taskName, #taskDate, #prioritySelector").forEach((e=>{e.value=""})),n.style.display="none",e.style.display="inline"})),i.addEventListener("click",(function(){n.style.display="none",e.style.display="inline"}))})(),(()=>{let n=document.querySelector(".newProjectBtn"),l=document.querySelector(".newProjectContainer");n.addEventListener("click",(function(){l.style.display="flex",n.style.display="none"}));let o=document.querySelector(".confirmProjectBtn"),s=document.querySelector(".cancelProjectBtn");o.addEventListener("click",(function(){let o=document.querySelector("#projectName").value,s=new e(o);t.push(s),c=o,document.querySelector(".projectList").innerHTML="",r(),document.querySelectorAll("#projectName").forEach((e=>{e.value=""})),l.style.display="none",n.style.display="inline"})),s.addEventListener("click",(function(){l.style.display="none",n.style.display="inline"}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,